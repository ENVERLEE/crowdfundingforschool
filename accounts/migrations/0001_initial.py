# Generated by Django 4.2.16 on 2024-12-09 11:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("nickname", models.CharField(blank=True, max_length=50)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("address", models.CharField(blank=True, max_length=200)),
                ("address_detail", models.CharField(blank=True, max_length=100)),
                ("postal_code", models.CharField(blank=True, max_length=10)),
                (
                    "total_backed_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                ("total_backed_projects", models.IntegerField(default=0)),
                (
                    "points",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "total_points_received",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                (
                    "total_points_used",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                ("last_point_received_at", models.DateTimeField(blank=True, null=True)),
                ("is_creator", models.BooleanField(default=False)),
                (
                    "creator_status",
                    models.CharField(
                        choices=[
                            ("none", "일반회원"),
                            ("pending", "창작자 신청중"),
                            ("approved", "승인된 창작자"),
                            ("rejected", "창작자 신청 거절"),
                        ],
                        default="none",
                        max_length=20,
                    ),
                ),
                (
                    "creator_application_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("creator_approved_date", models.DateTimeField(blank=True, null=True)),
                ("creator_rejection_reason", models.TextField(blank=True)),
                ("total_created_projects", models.IntegerField(default=0)),
                (
                    "total_raised_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                ("company_name", models.CharField(blank=True, max_length=100)),
                (
                    "business_registration_number",
                    models.CharField(blank=True, max_length=20),
                ),
                ("company_description", models.TextField(blank=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="PointHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[("receive", "포인트 지급"), ("use", "포인트 사용")],
                        max_length=10,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=15)),
                ("balance", models.DecimalField(decimal_places=2, max_digits=15)),
                ("admin_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
